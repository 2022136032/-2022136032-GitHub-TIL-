유형과 유형: var를 사용하는 유형과 외부 유형 선언(문자열 작성자)이 가능합니다. String?처럼 ?를 코팅 null이 될 수 있음을 선언할 수 있는 Null 안전 기능이 포함되어 있습니다.

주요 데이터 유형: int (정수)와 double (실수) 같은 숫자 유형, 그리고 String (문자열)을 지원합니다.

칵테일 타입:

목록: 여러 항목을 짧게 저장하는 목록입니다.

설정: 분리된 값을 허용하지 않는 컬렉션입니다.

지도: 키와 기본으로 중간 백업을 저장하는 컬렉션입니다.

반대: 산술 대신 (+, -, *, /, %), 반대 (>, <=, ==), 그리고 조건에 따라 반환되는 삼항 대신 (?:)나 null 반대 (??)를 지원합니다.

해석: if-else와 for, 같은 기본 제어 문 외에도 Dart 3.x에서는 패턴 일치를 지원하는 스위치 문이 추가되었습니다.

다가오는지향 프로그래밍: 클래스를 펼치는 것을 정의하고, 확장을 통해 다른 클래스를 믿을 수 있습니다.

Dart 3.x의 새로운 기능: 클래스 없이 여러 값을 가질 수 있는 **레코드(Records)**와 적합한 패턴 일치(Pattern Matching) 기능이 포함되었습니다.

void main() {
print('안녕하세요, 다트!');
print('안녕, 다트!' + '반가워');
인쇄(5 + 4);

// 이중 연결과 단일 연결 모두 사용 가능
print('안녕, 다트!');
print("신구대");

// 여러 줄 문자열
print('''건너뛰기11''');
print('''
건너뛰기22''');
}
끈? bookName = "핸즈온 플러터";
print(책이름); // 핸즈온 플러스

문자열 bookName1;
bookName1 = "핸즈온 플러터";
인쇄(책이름1); // 핸즈온 플러스

// bookName이 null이 분할 길이(length
)를 출력합니다. if (bookName != null){
print(bookName.length);
}
}
int a = 312;
더블 b = 3.14159265;

print(a);
print(a.런타임유형); // int
print(b);
print(b.런타임유형); // double

숫자 c = a; // num은 int와 double 모두 포함 가능
print(c); // 312c
= b;
인쇄(c); // 3.14159265

객체 d = a; // 객체는 모든 유형의 추가 클래스
d = b;
d = c;
인쇄(d); // 3.14159265

var name = '홍길동';
변수 연령 = 23;
var format = '$name의 나이는 $age입니다'; // 문자열 보간법
print(format); // 홍길동의 나이는 23세입니다

var trueValue = true;
var falseValue = false;
인쇄(trueValue); // 참
print(falseValue); // false
// var 키워드로 리스트 생성
var nums = [1,2,3,4,5,6,7,8,9,10];
숫자.추가(11); // 항목 추가
print(nums); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
print(nums[5]); // 6
print(nums.first); // 1개
인쇄(nums.last); // 11

//다리스트 생성 방법
var vl1 = [1,2,3]; // 유형의 벽돌
var vl3 = List.empty(growable: true); // 비어있는 리스트 생성
vl3.add(10);
vl3.add('문자추가');
vl3.add(true);
인쇄(vl3); // [10, 문자 추가, true]
print(vl3.runtimeType); // _GrowableList

// List.generate()로 생성
var valueList = List.generate(100, (index) => 'sample$index');
인쇄(valueList);

//리스트합치기 (
스프레드 반대) var listOne = [1,2,3];
var listTwo = ['하나','둘','셋'];
var mergeList = [...listOne, ...listTwo];
인쇄(병합 목록); // [1, 2, 3, 하나, 둘, 셋]
}
